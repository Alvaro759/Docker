services:
  # docker run -it -d --name mi-mysql-2 --net mi-mysql-red2 --mount source=mi-mysql-vol-2,target=/data/db -e MYSQL_ROOT_PASSWORD=pass mysql
  mi-mysql-2:
    container_name: mi-mysql-2 # --name mi-mysql-2
    networks:
      - mi-mysql-red-2 # --net mi-mysql-red2
    volumes:
      - mi-mysql-vol-2:/data/db # --mount source=mi-mysql-vol-2,target=/data/db
    environment:
      - MYSQL_ROOT_PASSWORD=pass # -e MYSQL_ROOT_PASSWORD=pass
    stdin_open: true # -i
    tty: true # -t
    image: mysql # imagen

# docker run -it -d --name mi-dashboard-2 --net mi-mysql-red2 -e PMA_HOST=mi-mysql-2 -p 8080:80 phpmyadmin
  mi-dashboard-2:
    container_name: mi-dashboard-2 # --name mi-dashboard-2
    networks:
      - mi-mysql-red-2 # --net mi-mysql-red2
    environment:
      - PMA_HOST=mi-mysql-2 # -e PMA_HOST=mi-mysql-2
    ports:
      - 8080:80 # -p 8080:80
    stdin_open: true # -i
    tty: true # -t
    image: phpmyadmin # imagen

# docker network create mi-mysql-red-2 --driver default -ip 172.25.0.0/16
networks:
  mi-mysql-red-2: # create mi-mysql-red-2
    ipam:
      driver: default # --driver default
      config:
        - subnet: 172.25.0.0/16 # -ip 172.25.0.0/16

# docker volume create mi-mysql-vol-2
volumes:
  mi-mysql-vol-2:
